// ExcelOperate_DLL.h : ExcelOperate_DLL DLL 的主头文件
//

#ifdef	DLL_API
#else  
#define DLL_API		extern "C" _declspec(dllimport)  
#endif



/****************************************************************************************************************
初始化Excel服务器

bShow :			是否显示EXCEL
ExcelVersion :	返回EXCEL版本
****************************************************************************************************************/
DLL_API	BOOL _stdcall InitExcel(BOOL bShow,CString &ExcelVersion);


/****************************************************************************************************************
打开Excel文件

FileName :	文件完成路径名，如为空默认为新建
****************************************************************************************************************/
DLL_API	BOOL _stdcall OpenExcel(CString FileName);


/****************************************************************************************************************
载入表单。至此，对Excel文件操作所必需的对象均已构建、关联完毕
CreatNewSheet:  Sheet不存在是否创建
strSheetName :	sheet名称
****************************************************************************************************************/
DLL_API BOOL _stdcall LoadSheet(bool CreatNewSheet,CString strSheetName);


/****************************************************************************************************************
读取单元格内容 取得表单中坐标为（iRow , iColumn）的单元格内容。由于单元格中存储的数据类型不同，所以程序需要分别
判断、转化为字符串型数据后输出

****************************************************************************************************************/
DLL_API	void _stdcall GetCell(int iRow, int iColumn, CString &Value);


/****************************************************************************************************************
全表单查找 在整个表单的范围内，精确查找参数CellContext内容。如果找到，则返回第一个匹配单元格的横纵坐标；如果
没找到，则横纵坐标均返回-1

CellContext :	目标字符
Row：			所在行号
Column：		所在列号
****************************************************************************************************************/
DLL_API	void _stdcall FindCell(CString CellContext,long &Row,long &Column);

/****************************************************************************************************************
向指定单元格中写入数据 向当前表单坐标为（x , y）的单元格写入数据str。

row：		行号
col：		列号
str：	写入数据
****************************************************************************************************************/
DLL_API void  _stdcall WriteInCell(long x,long y,CString str);


/****************************************************************************************************************
追加数据行，向表单追加数据行。可根据实际情况追加所需数量列的数据行。

PUTDATA：	写入数据,按数据数量，列数一次填入
****************************************************************************************************************/
DLL_API void _stdcall AppendDataRow(CArray<CString,CString> &PUTDATA);


/****************************************************************************************************************
单元格坐标转换 本函数将数字形式的横纵坐标，转换成字母列数字行的形式输出。如坐标（20,7）转换后为T7。

row：		行号
col：		列号
Alphameric：	返回字母坐标
****************************************************************************************************************/
DLL_API	void _stdcall ColumnNumToAlphameric(long row,long col ,CString &Alphameric);

/****************************************************************************************************************
获取列数
****************************************************************************************************************/
DLL_API int _stdcall  GetColumnCount();  

/****************************************************************************************************************
得到行的总数
****************************************************************************************************************/
DLL_API int _stdcall GetRowCount();  

/****************************************************************************************************************
保存Excel文件
strFileName: 当文件为新建时此文件名生效
****************************************************************************************************************/
DLL_API BOOL _stdcall SaveExcel(CString strFileName);

/****************************************************************************************************************
关闭Excel文件
****************************************************************************************************************/
DLL_API	void _stdcall CloseExcel();


